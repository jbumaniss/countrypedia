name: Run Tests with CI Env

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      # You can also define global environment variables here.
      APP_ENV: testing
      # For example, if you want to use an in-memory SQLite database:
      DB_CONNECTION: sqlite
      DB_DATABASE: ':memory:'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # Install composer dependencies
      - name: Install Composer Dependencies
        run: composer install --prefer-dist --no-interaction --no-progress

      # Copy the CI-specific environment file to .env
      - name: Setup CI Environment
        run: cp .env.ci .env

      - name: Generate Application Key
        run: php artisan key:generate

      - name: Run Migrations
        run: php artisan migrate --force

      # Run tests with coverage
      - name: Run Tests with Coverage
        run: php artisan test --env=testing --coverage --coverage-html=coverage --coverage-clover=coverage/clover.xml

      # Upload coverage report (warn if no files found)
      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3.1.2
        with:
          name: coverage-report
          path: coverage
          if-no-files-found: 'warn'
